print("Docker OS...")
def dockerOS = getDockerOS()
println(dockerOS)

subprojects {

    apply plugin: 'base'

    ext.dockerSourceDir = file("src/main/docker")
    ext.dockerBuildDir = file("${project.buildDir}/docker")

    task copyDockerSource(type: Copy) {
        from file("${dockerSourceDir}/${dockerOS}")
        into dockerBuildDir
    }

    task buildDockerImage(type: Exec) {
        description 'Assembles a Docker image for this project.'
        group = 'Build'
        dependsOn copyDockerSource //, copyJar
        def tag = "${project.name}:${project.version}${project.rev}-${dockerOS}"
        if (dockerNamespace) {
            tag = "${dockerNamespace}/${tag}"
        }
        commandLine 'docker', 'build', '-t', tag, dockerBuildDir
    }

    assemble.dependsOn buildDockerImage
}

String getDockerOS() {
    try {
        Process process = 'docker version'.execute()
        if (process.waitFor() != 0) {
            throw new GradleScriptException("Cannot connect to docker daemon", null)
        }
        return (process.in.text =~ /(?ms)Server:.*OS\/Arch:\s+(\S+)\//)[0][1]
    } catch (IOException e) {
        throw new GradleScriptException("Cannot run 'docker'", e)
    }
}
